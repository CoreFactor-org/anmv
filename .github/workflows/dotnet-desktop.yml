name: Build ANMV projects and Publish NuGet Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration Release

    - name: Run unit tests
      run: dotnet test --no-build --verbosity normal
      continue-on-error: true  # Les tests peuvent Ã©chouer sans bloquer le workflow pour le moment (xml officiel pas encore valide)

    - name: Pack VetCore.Anmv package
      run: dotnet pack VetCore.Anmv/VetCore.Anmv.csproj --configuration Release --output ./nupkg

    - name: Pack VetCore.Anmv.Utils package
      run: dotnet pack VetCore.Anmv.Utils/VetCore.Anmv.Utils.csproj --configuration Release --output ./nupkg

    - name: Set version for VetCore.Anmv
      id: set-version-anmv
      run: echo "PACKAGE_VERSION=$(dotnet list package | grep 'VetCore.Anmv' | awk '{print $2}')" >> $GITHUB_ENV

    - name: Set version for VetCore.Anmv.Utils
      id: set-version-anmv-utils
      run: echo "PACKAGE_VERSION_UTILS=$(dotnet list package | grep 'VetCore.Anmv.Utils' | awk '{print $2}')" >> $GITHUB_ENV

    - name: Push VetCore.Anmv package to NuGet
      if: env.PACKAGE_VERSION != ${{ secrets.LAST_PUBLISHED_ANMV_VERSION }}
      run: dotnet nuget push "./nupkg/VetCore.Anmv.*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

    - name: Push VetCore.Anmv.Utils package to NuGet
      if: env.PACKAGE_VERSION_UTILS != ${{ secrets.LAST_PUBLISHED_ANMV_UTILS_VERSION }}
      run: dotnet nuget push "./nupkg/VetCore.Anmv.Utils.*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
